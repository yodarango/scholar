import React from "react";
import styles from "./image_from_verse_editor.module.css";
import Portal from "../../hoc/potal";
import { CloseContent } from "../../fragments/buttons/close_content";
import { RoundLoader } from "../../fragments/chunks/round_loader";
import { Header } from "../../fragments/Typography/header";
import { Primary } from "../../fragments/buttons/primary";
import { Error } from "../../common/feedback/error";

type TImageFromVerseEditorProps = {
   ID: string;
   img_url: string;
   prompt?: string;
   VERSE_ID: string;
   onClose: () => void;
   onTryAgain: (VERSE_ID: string) => void;
   loading: boolean;
   error: boolean;
   verseCitation: string;
};

export const ImageFromVerseEditor = ({
   loading,
   img_url,
   ID,
   VERSE_ID,
   onTryAgain,
   prompt,
   error,
   verseCitation,
   onClose
}: TImageFromVerseEditorProps) => {
   const handleDownload = () => {
      const a = document.createElement("a");
      a.href = img_url;
      a.download = `${ID}.png`;
      a.click();
   };

   const handleTryAgain = () => {
      onTryAgain(VERSE_ID);
   };

   return (
      <Portal>
         <div className={styles.mainWrapper}>
            <div className={styles.close}>
               <CloseContent cta={{ handleClick: onClose }} />
            </div>
            {!loading && !error && (
               <>
                  <div className={styles.imageWrapper}>
                     <Header
                        text={`Hooray! Here is your image based on ${verseCitation}`}
                        size='large'
                        type={2}
                     />
                     <img src={img_url} alt='generated by AI' className={styles.image} />
                  </div>
                  <div className={styles.buttons}>
                     <Primary cta={{ handleClick: handleDownload }} title='Download' type='1' />
                     <Primary cta={{ handleClick: handleTryAgain }} title='Try again' type='2' />
                  </div>
               </>
            )}
            {loading && (
               <div className={styles.loader}>
                  <RoundLoader />
               </div>
            )}
            {error && (
               <div className={styles.loader}>
                  <Error />
               </div>
            )}
         </div>
      </Portal>
   );
};
